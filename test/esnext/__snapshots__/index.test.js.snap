// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Publish Test File via Babel: cjs 1`] = `
"/*! esnext v1.0.0 by Sebastian Werner <s.werner@sebastian-software.de> */
'use strict';

var _camelCase = require('lodash/camelCase');
require('core-js/modules/es.promise.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e[\\"default\\"] : e; }

var _camelCase__default = /*#__PURE__*/_interopDefaultLegacy(_camelCase);

console.log(\\"CherryPick Import Lodash:\\", _camelCase__default(\\"hello world\\") === \\"helloWorld\\");
console.log(\\"Package\\", \\"esnext\\");
console.log(\\"Target\\", \\"lib\\");
console.log(\\"ES2016 Enabled:\\", 2 ** 2 === 4);
new Promise((resolve, reject) => {
  resolve(\\"resolved\\");
}).then(first => {
  console.log(\\"Promise:\\", first);
});
const CONSTANT = 123;
console.log(\\"Constant:\\", CONSTANT);
var myArray = [1, 2, 3];
console.log(\\"Supports Array.includes?:\\", myArray.includes && myArray.includes(2));
var mySet = new Set(myArray);
console.log(\\"Supports Set:\\", mySet.add(4));

(function (supportsDefault = true) {
  console.log(\\"Supports default parameters:\\", supportsDefault);
})();
/* eslint-disable no-shadow */


let testVariable = \\"outer\\";
{
  let testVariable = \\"inner\\";
  console.log(\\"X Value from inner scope:\\", testVariable);
}
console.log(\\"X Value from outer scope:\\", testVariable);
var source = {
  first: 1,
  second: 2
};
var destructed = Object.assign({
  third: 3
}, source);
console.log(\\"Destructed:\\", destructed);

class MyClass {
  constructor() {
    console.log(\\"Called constructor\\");
    this.helper();
    this.instanceProperty = 3;
  }

  helper() {
    console.log(\\"Called helper\\");
  }

}

class SecondClass extends MyClass() {
  constructor() {
    super(100);
  }

}

console.log(\\"Initialized class:\\", new MyClass());

async function helper() {
  await PromiseHelper();
  return 42;
}

helper();
//# sourceMappingURL=index.cjs.js.map
"
`;

exports[`Publish Test File via Babel: esm 1`] = `
"/*! esnext v1.0.0 by Sebastian Werner <s.werner@sebastian-software.de> */
import _camelCase from 'lodash/camelCase';
import 'core-js/modules/es.promise.js';

console.log(\\"CherryPick Import Lodash:\\", _camelCase(\\"hello world\\") === \\"helloWorld\\");
console.log(\\"Package\\", \\"esnext\\");
console.log(\\"Target\\", \\"lib\\");
console.log(\\"ES2016 Enabled:\\", 2 ** 2 === 4);
new Promise((resolve, reject) => {
  resolve(\\"resolved\\");
}).then(first => {
  console.log(\\"Promise:\\", first);
});
const CONSTANT = 123;
console.log(\\"Constant:\\", CONSTANT);
var myArray = [1, 2, 3];
console.log(\\"Supports Array.includes?:\\", myArray.includes && myArray.includes(2));
var mySet = new Set(myArray);
console.log(\\"Supports Set:\\", mySet.add(4));

(function (supportsDefault = true) {
  console.log(\\"Supports default parameters:\\", supportsDefault);
})();
/* eslint-disable no-shadow */


let testVariable = \\"outer\\";
{
  let testVariable = \\"inner\\";
  console.log(\\"X Value from inner scope:\\", testVariable);
}
console.log(\\"X Value from outer scope:\\", testVariable);
var source = {
  first: 1,
  second: 2
};
var destructed = Object.assign({
  third: 3
}, source);
console.log(\\"Destructed:\\", destructed);

class MyClass {
  constructor() {
    console.log(\\"Called constructor\\");
    this.helper();
    this.instanceProperty = 3;
  }

  helper() {
    console.log(\\"Called helper\\");
  }

}

class SecondClass extends MyClass() {
  constructor() {
    super(100);
  }

}

console.log(\\"Initialized class:\\", new MyClass());

async function helper() {
  await PromiseHelper();
  return 42;
}

helper();
//# sourceMappingURL=index.esm.js.map
"
`;

exports[`Publish Test File via Babel: umd 1`] = `
"/*! esnext v1.0.0 by Sebastian Werner <s.werner@sebastian-software.de> */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('lodash/camelCase'), require('core-js/modules/es.promise.js')) :
  typeof define === 'function' && define.amd ? define(['lodash/camelCase', 'core-js/modules/es.promise.js'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global._camelCase));
})(this, (function (_camelCase) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e[\\"default\\"] : e; }

  var _camelCase__default = /*#__PURE__*/_interopDefaultLegacy(_camelCase);

  console.log(\\"CherryPick Import Lodash:\\", _camelCase__default(\\"hello world\\") === \\"helloWorld\\");
  console.log(\\"Package\\", \\"esnext\\");
  console.log(\\"Target\\", \\"lib\\");
  console.log(\\"ES2016 Enabled:\\", 2 ** 2 === 4);
  new Promise((resolve, reject) => {
    resolve(\\"resolved\\");
  }).then(first => {
    console.log(\\"Promise:\\", first);
  });
  const CONSTANT = 123;
  console.log(\\"Constant:\\", CONSTANT);
  var myArray = [1, 2, 3];
  console.log(\\"Supports Array.includes?:\\", myArray.includes && myArray.includes(2));
  var mySet = new Set(myArray);
  console.log(\\"Supports Set:\\", mySet.add(4));

  (function (supportsDefault = true) {
    console.log(\\"Supports default parameters:\\", supportsDefault);
  })();
  /* eslint-disable no-shadow */


  let testVariable = \\"outer\\";
  {
    let testVariable = \\"inner\\";
    console.log(\\"X Value from inner scope:\\", testVariable);
  }
  console.log(\\"X Value from outer scope:\\", testVariable);
  var source = {
    first: 1,
    second: 2
  };
  var destructed = Object.assign({
    third: 3
  }, source);
  console.log(\\"Destructed:\\", destructed);

  class MyClass {
    constructor() {
      console.log(\\"Called constructor\\");
      this.helper();
      this.instanceProperty = 3;
    }

    helper() {
      console.log(\\"Called helper\\");
    }

  }

  class SecondClass extends MyClass() {
    constructor() {
      super(100);
    }

  }

  console.log(\\"Initialized class:\\", new MyClass());

  async function helper() {
    await PromiseHelper();
    return 42;
  }

  helper();

}));
//# sourceMappingURL=index.umd.js.map
"
`;
